{"version":3,"sources":["styles/sizes.js","components/shared/Footer/Footer.js","components/shared/Navbar/Navbar.js","hooks/useInputState.js","components/TodoForm/useStyles.js","components/TodoForm/TodoForm.js","helpers.js","components/TodoDate/TodoDate.js","hooks/useToggleState.js","components/Task/useStyles.js","components/Task/Task.js","components/TaskForm/useStyles.js","components/TaskForm/TaskForm.js","components/Todo/useStyles.js","components/Todo/Todo.js","components/TodoList/useStyles.js","components/TodoList/TodoList.js","hooks/useTodoState.js","components/TodoApp/useStyles.js","components/TodoApp/TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["size","xs","sm","md","lg","xl","useStyles","makeStyles","theme","root","position","bottom","width","backgroundColor","sizes","color","fontSize","letterSpacing","textDecoration","padding","textShadow","Footer","classes","className","rel","target","href","appBar","marginBottom","title","fontFamily","Navbar","AppBar","Toolbar","Typography","variant","useInput","initialValue","useState","value","setValue","handleChange","event","clear","form","borderRadius","border","input","marginLeft","flex","fontWeight","divider","height","margin","iconButton","MyApp","addTodo","newTaskInput","handleNewTaskInput","clearNewTaskInput","enqueueSnackbar","useSnackbar","Box","Grid","component","onSubmit","e","preventDefault","container","InputBase","required","placeholder","type","onChange","Divider","orientation","IconButton","aria-label","IntegrationNotistack","props","maxSnack","subtitle","TodoDate","currentDate","Date","weekday","Intl","DateTimeFormat","format","date","getMonth","getDate","getFullYear","useToggle","toggle","taskItem","taskText","cursor","wordBreak","editButton","deleteButton","red","Task","isComplete","toggleIsEdit","task","handleDelete","handleEdit","ListItemText","onClick","style","textDecorationColor","ListItemSecondaryAction","edge","disabled","editTaskInput","caretColor","lineHeight","paddingRight","grey","clearButton","TaskForm","id","updateTodo","handleEditTaskInput","clearEditTaskInput","textInput","useRef","handleUpdate","FormControl","onBlur","label","onKeyDown","keyCode","shiftKey","onFocus","val","inputRef","fullWidth","multiline","autoFocus","onMouseDown","current","focus","icon","minWidth","checkedIcon","Todo","deleteTodo","toggleComplete","isEdit","ListItem","ListItemIcon","Checkbox","checkBox","checked","tabIndex","inputProps","todoList","overflowY","TodoList","todos","List","map","todo","key","useTodoState","JSON","parse","localStorage","getItem","setTodos","newTask","newTodo","uuid","updatedTodos","filter","grid","maxHeight","toolbar","minHeight","card","boxShadow","TodoApp","useEffect","setItem","stringify","justify","item","display","flexDirection","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f6c673ef.chunk.js","sourcesContent":["export default {\r\n  up() {},\r\n  down(size) {\r\n    const sizes = {\r\n      xs: \"575.98px\",\r\n      sm: \"767.98px\",\r\n      md: \"991.98px\",\r\n      lg: \"1199.98px\",\r\n      xl: \"1600px\",\r\n    };\r\n    return `@media (max-width: ${sizes[size]})`;\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport sizes from \"../../../styles/sizes\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n\r\n    bottom: \"0\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#3D9DF2\",\r\n    [sizes.down(\"sm\")]: {\r\n      // display: \"none\",\r\n    },\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    boxShadow: \" 0px 12px 16px 7px rgba(0,0,0,0.75)\",\r\n    \"&  a\": {\r\n      color: \"rgba(20,20,20,0.9)\",\r\n      fontSize: \"1.25rem\",\r\n      letterSpacing: \"0.1rem\",\r\n      textDecoration: \"\",\r\n      padding: \"0.75rem 1.5rem\",\r\n      textShadow: \"1px 1px 1px rgba(0,0,0,0.13)\",\r\n    },\r\n    \"&  span\": {\r\n      color: \"rgba(20,20,20,0.9)\",\r\n      fontSize: \"1.25rem\",\r\n      padding: \"0.75rem 1.5rem\",\r\n      letterSpacing: \"0.1rem\",\r\n      textShadow: \"1px 1px 1px rgba(0,0,0,0.13)\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Footer() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <span> &copy; Erick Cartiady</span>\r\n      <a\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n        href=\"https://github.com/erickkartiadi/Todo-List\"\r\n      >\r\n        Github\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { AppBar, Typography, Toolbar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appBar: {\r\n    marginBottom: \"64px\",\r\n    backgroundColor: \"#3D9DF2\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Amaranth\",\r\n  },\r\n}));\r\n\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar className={classes.appBar}>\r\n      <Toolbar>\r\n        <Typography className={classes.title} variant=\"h6\">\r\n          TodoList\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { useState } from \"react\";\r\n\r\nfunction useInput(initialValue = \"\") {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  const clear = () => {\r\n    setValue(\"\");\r\n  };\r\n  return [value, handleChange, clear];\r\n}\r\n\r\nexport default useInput;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginBottom: \"1rem\",\r\n  },\r\n  form: {\r\n    borderRadius: \"0.25rem\",\r\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n  },\r\n  input: {\r\n    marginLeft: \"1rem\",\r\n    flex: 1,\r\n    fontFamily: \"Titillium Web\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  divider: {\r\n    height: \"inherit\",\r\n    margin: 4,\r\n  },\r\n  iconButton: {\r\n    \"& svg\": {\r\n      color: \"#3D9DF2\",\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport { Grid, Box, IconButton, Divider, InputBase } from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\r\n\r\nimport useInput from \"../../hooks/useInputState\";\r\nimport { useStyles } from \"./useStyles\";\r\n\r\nfunction MyApp({ addTodo }) {\r\n  const [newTaskInput, handleNewTaskInput, clearNewTaskInput] = useInput(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleAddTodo = (e) => {\r\n    addTodo(newTaskInput);\r\n    clearNewTaskInput();\r\n  };\r\n\r\n  const handleSubmit = (variant) => (e) => {\r\n    e.preventDefault();\r\n    handleAddTodo();\r\n    enqueueSnackbar(\"Task Added\", { variant });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Grid\r\n        className={classes.form}\r\n        component=\"form\"\r\n        onSubmit={handleSubmit(\"success\")}\r\n        container\r\n      >\r\n        <InputBase\r\n          required\r\n          className={classes.input}\r\n          placeholder=\"Add New Task\"\r\n          type=\"text\"\r\n          value={newTaskInput}\r\n          onChange={handleNewTaskInput}\r\n        />\r\n        <Divider className={classes.divider} orientation=\"vertical\" />\r\n        <IconButton\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          className={classes.iconButton}\r\n          aria-label=\"directions\"\r\n        >\r\n          <AddCircleIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function IntegrationNotistack(props) {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <MyApp {...props} />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n","export const getDate = () => {\r\n  const currentDate = new Date();\r\n  const weekday = Intl.DateTimeFormat(\"en-US\", { weekday: \"long\" }).format(\r\n    currentDate\r\n  );\r\n  const date = `${currentDate.getMonth()}-${currentDate.getDate()}-${currentDate.getFullYear()}`;\r\n  return { weekday, date };\r\n};\r\n","import React from \"react\";\r\nimport { getDate } from \"../../helpers\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginBottom: \"2rem\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Amaranth\",\r\n  },\r\n  subtitle: {\r\n    fontFamily: \"Titillium Web\",\r\n  },\r\n}));\r\nfunction TodoDate() {\r\n  const { weekday, date } = getDate();\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography className={classes.title} variant=\"h4\">\r\n        {weekday}\r\n      </Typography>\r\n      <Typography className={classes.subtitle} variant=\"subtitle1\">\r\n        {date}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TodoDate;\r\n","import { useState } from \"react\";\r\n\r\nfunction useToggle(initialValue = false) {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const toggle = () => {\r\n    setValue(!value);\r\n  };\r\n\r\n  return [value, toggle];\r\n}\r\nexport default useToggle;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nexport const useStyles = makeStyles(() => ({\r\n  taskItem: {\r\n    margin: 0,\r\n  },\r\n  taskText: {\r\n    cursor: \"pointer\",\r\n    width: \"70%\",\r\n    wordBreak: \"break-all\",\r\n    fontFamily: \"Titillium Web\",\r\n  },\r\n  editButton: {},\r\n  deleteButton: {\r\n    color: red[800],\r\n  },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport {\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { useStyles } from \"./useStyles\";\r\n\r\nfunction Task({ isComplete, toggleIsEdit, task, handleDelete }) {\r\n  const handleEdit = () => {\r\n    !isComplete && toggleIsEdit();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItemText className={classes.taskItem}>\r\n        <div\r\n          onClick={handleEdit}\r\n          style={{\r\n            textDecoration: isComplete ? \"line-through\" : \"none\",\r\n            textDecorationColor: isComplete && \"grey\",\r\n          }}\r\n          className={classes.taskText}\r\n        >\r\n          {task}\r\n        </div>\r\n      </ListItemText>\r\n      <ListItemSecondaryAction>\r\n        <IconButton\r\n          color=\"primary\"\r\n          edge=\"end\"\r\n          aria-label=\"edit\"\r\n          onClick={handleEdit}\r\n          disabled={isComplete}\r\n          className={classes.editButton}\r\n        >\r\n          <EditIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"secondary\"\r\n          onClick={handleDelete}\r\n          edge=\"end\"\r\n          aria-label=\"delete\"\r\n          className={classes.deleteButton}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  editTaskInput: {\r\n    caretColor: \"blue\",\r\n    lineHeight: \"1.5\",\r\n    paddingRight: \"30px\",\r\n    \"& :focus\": {\r\n      color: grey[700],\r\n    },\r\n    fontFamily: \"Titillium Web\",\r\n  },\r\n  form: {\r\n    \"& > div\": {\r\n      padding: 0,\r\n    },\r\n    width: \"70%\",\r\n    fontFamily: \"Titillium Web\",\r\n  },\r\n  clearButton: {\r\n    color: grey[800],\r\n  },\r\n}));\r\n","import React, { useRef } from \"react\";\r\n\r\nimport {\r\n  FormControl,\r\n  InputBase,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport useInput from \"../../hooks/useInputState\";\r\nimport { useStyles } from \"./useStyles\";\r\n\r\nfunction TaskForm({ id, task, toggleIsEdit, updateTodo }) {\r\n  const [editTaskInput, handleEditTaskInput, clearEditTaskInput] = useInput(\r\n    task\r\n  );\r\n\r\n  let textInput = useRef(null);\r\n\r\n  const handleUpdate = (e) => {\r\n    updateTodo(id, editTaskInput);\r\n    toggleIsEdit();\r\n  };\r\n\r\n  const handleClear = (e) => {\r\n    e.preventDefault();\r\n\r\n    clearEditTaskInput();\r\n    textInput.current.focus();\r\n  };\r\n  const onEnterPress = (e) => {\r\n    if (e.keyCode === 13 && e.shiftKey === false) {\r\n      e.preventDefault();\r\n      handleUpdate();\r\n    }\r\n  };\r\n\r\n  const moveCursorToEndInput = (e) => {\r\n    let val = e.target.value;\r\n    e.target.value = \"\";\r\n    e.target.value = val;\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const handleOnBlur = () => {\r\n    toggleIsEdit();\r\n  };\r\n  return (\r\n    <>\r\n      <FormControl\r\n        component=\"form\"\r\n        onBlur={handleOnBlur}\r\n        onSubmit={handleUpdate}\r\n        className={classes.form}\r\n      >\r\n        <InputBase\r\n          id=\"standard-basic\"\r\n          label=\"Edit Task\"\r\n          value={editTaskInput}\r\n          className={classes.editTaskInput}\r\n          onKeyDown={onEnterPress}\r\n          onChange={handleEditTaskInput}\r\n          onFocus={moveCursorToEndInput}\r\n          inputRef={textInput}\r\n          fullWidth\r\n          multiline\r\n          autoFocus\r\n        />\r\n      </FormControl>\r\n      <ListItemSecondaryAction>\r\n        <IconButton\r\n          onMouseDown={handleClear}\r\n          className={classes.clearButton}\r\n          color=\"secondary\"\r\n          edge=\"end\"\r\n          aria-label=\"delete\"\r\n        >\r\n          <ClearIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles(() => ({\r\n  root: {\r\n    fontFamily: \"Titillium Web\",\r\n  },\r\n  icon: {\r\n    minWidth: \"42px\",\r\n  },\r\n  checkedIcon: {\r\n    color: \"#F23D7F\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport { ListItem, ListItemIcon, Checkbox } from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\n\r\nimport useToggle from \"../../hooks/useToggleState\";\r\n\r\nimport Task from \"../Task/Task\";\r\nimport TaskForm from \"../TaskForm/TaskForm\";\r\nimport { useStyles } from \"./useStyles\";\r\n\r\nfunction Todo({\r\n  id,\r\n  task,\r\n  isComplete,\r\n  updateTodo,\r\n  deleteTodo,\r\n  toggleComplete,\r\n}) {\r\n  const [isEdit, toggleIsEdit] = useToggle();\r\n\r\n  const handleDelete = (e) => {\r\n    deleteTodo(id);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    toggleComplete(id);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <ListItem className={classes.root}>\r\n      <ListItemIcon className={classes.icon}>\r\n        <Checkbox\r\n          onChange={handleComplete}\r\n          className={classes.checkBox}\r\n          checked={isComplete}\r\n          edge=\"start\"\r\n          tabIndex={-1}\r\n          fontSize=\"small\"\r\n          icon={<RadioButtonUncheckedIcon />}\r\n          checkedIcon={<CheckCircleIcon className={classes.checkedIcon} />}\r\n          inputProps={{ \"aria-labelledby\": \"task completed\" }}\r\n        />\r\n      </ListItemIcon>\r\n      {isEdit ? (\r\n        <TaskForm\r\n          id={id}\r\n          task={task}\r\n          toggleIsEdit={toggleIsEdit}\r\n          updateTodo={updateTodo}\r\n        />\r\n      ) : (\r\n        <Task\r\n          isComplete={isComplete}\r\n          toggleIsEdit={toggleIsEdit}\r\n          task={task}\r\n          handleDelete={handleDelete}\r\n        />\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\nexport default Todo;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  todoList: {\r\n    height: \"100%\",\r\n    overflowY: \"auto\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport { List, Box } from \"@material-ui/core\";\r\nimport \"./TodoList.css\";\r\n\r\nimport { useStyles } from \"./useStyles\";\r\n\r\nfunction TodoList({ todos, updateTodo, deleteTodo, toggleComplete }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box height=\"72.5%\">\r\n      <List className={`${classes.todoList} TodoList`}>\r\n        {todos.map((todo) => (\r\n          <Todo\r\n            key={todo.id}\r\n            updateTodo={updateTodo}\r\n            deleteTodo={deleteTodo}\r\n            toggleComplete={toggleComplete}\r\n            {...todo}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nfunction useTodoState() {\r\n  const [todos, setTodos] = useState(\r\n    JSON.parse(localStorage.getItem(\"TodoList\")) || []\r\n  );\r\n\r\n  const addTodo = (newTask) => {\r\n    let newTodo = {\r\n      id: uuid(),\r\n      task: newTask,\r\n      isComplete: false,\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  const updateTodo = (id, newTask) => {\r\n    const updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, task: newTask };\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  };\r\n  const toggleComplete = (id) => {\r\n    const updatedTodos = todos.map((todo) =>\r\n      todo.id === id ? { ...todo, isComplete: !todo.isComplete } : todo\r\n    );\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return {\r\n    todos,\r\n    addTodo,\r\n    updateTodo,\r\n    deleteTodo,\r\n    toggleComplete,\r\n  };\r\n}\r\n\r\nexport default useTodoState;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport sizes from \"../../styles/sizes\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: \"100vh\",\r\n  },\r\n  grid: {\r\n    maxHeight: \"90%\",\r\n  },\r\n  toolbar: {\r\n    minHeight: 48,\r\n    [sizes.down(\"sm\")]: {\r\n      minHeight: 12,\r\n    },\r\n  },\r\n  card: {\r\n    padding: \"1.5rem\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0 13px 29px -20px rgba(0,0,0, 0.4)\",\r\n    [sizes.down(\"sm\")]: {\r\n      height: \"85%\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport Footer from \"../shared/Footer/Footer\";\r\nimport Navbar from \"../shared/Navbar/Navbar\";\r\nimport TodoForm from \"../TodoForm/TodoForm\";\r\nimport TodoDate from \"../TodoDate/TodoDate\";\r\nimport TodoList from \"../TodoList/TodoList\";\r\n\r\nimport { Box, Grid, Toolbar } from \"@material-ui/core\";\r\n\r\nimport useTodoState from \"../../hooks/useTodoState\";\r\nimport { useStyles } from \"./useStyles\";\r\n\r\nfunction TodoApp() {\r\n  const {\r\n    todos,\r\n    addTodo,\r\n    updateTodo,\r\n    deleteTodo,\r\n    toggleComplete,\r\n  } = useTodoState();\r\n\r\n  useEffect(() => {\r\n    const syncLocalStorage = () => {\r\n      localStorage.setItem(\"TodoList\", JSON.stringify(todos));\r\n    };\r\n    syncLocalStorage();\r\n  }, [todos]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Grid className={classes.container} container justify=\"center\">\r\n        <Grid className={classes.grid} item xs={11} sm={8} md={6} lg={4}>\r\n          <Toolbar />\r\n          <div className={classes.toolbar} />\r\n          <Box\r\n            height=\"70%\"\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            className={classes.card}\r\n          >\r\n            <TodoDate />\r\n            <TodoForm addTodo={addTodo} />\r\n            <TodoList\r\n              todos={todos}\r\n              updateTodo={updateTodo}\r\n              deleteTodo={deleteTodo}\r\n              toggleComplete={toggleComplete}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n","import React from \"react\";\r\nimport TodoApp from \"./components/TodoApp/TodoApp\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <TodoApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}